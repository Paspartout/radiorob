[gd_scene load_steps=16 format=2]

[ext_resource path="res://scripts/FlyingEnemy.gd" type="Script" id=1]
[ext_resource path="res://gfx/drone.png" type="Texture" id=2]
[ext_resource path="res://sfx/hurt.wav" type="AudioStream" id=3]
[ext_resource path="res://sfx/explosion.wav" type="AudioStream" id=4]
[ext_resource path="res://scenes/Blast.tscn" type="PackedScene" id=5]
[ext_resource path="res://sfx/blast.wav" type="AudioStream" id=6]

[sub_resource type="AtlasTexture" id=1]
atlas = ExtResource( 2 )
region = Rect2( 0, 0, 16, 16 )

[sub_resource type="AtlasTexture" id=2]
atlas = ExtResource( 2 )
region = Rect2( 16, 0, 16, 16 )

[sub_resource type="SpriteFrames" id=3]
animations = [ {
"frames": [ SubResource( 1 ), SubResource( 2 ) ],
"loop": true,
"name": "default",
"speed": 5.0
} ]

[sub_resource type="RectangleShape2D" id=4]
extents = Vector2( 8, 7 )

[sub_resource type="Animation" id=5]
length = 0.5
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.05, 0.1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1.5, 1.5 ), Vector2( 1, 1 ) ]
}
tracks/2/type = "method"
tracks/2/path = NodePath(".")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0.4 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "queue_free"
} ]
}
tracks/3/type = "audio"
tracks/3/path = NodePath("HurtSound")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"clips": [ {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource( 4 )
} ],
"times": PoolRealArray( 0 )
}

[sub_resource type="Animation" id=6]
loop = true
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:position")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.4, 0.8 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 0, -4 ), Vector2( 0, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 20.0, 20.0 ]
}

[sub_resource type="Animation" id=7]
length = 0.2
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.05, 0.1, 0.15 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ false, true, false, true ]
}

[sub_resource type="Animation" id=8]
loop = true
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:position")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.4, 0.8 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 0, -4 ), Vector2( 0, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 0.0 ]
}

[sub_resource type="RectangleShape2D" id=9]
extents = Vector2( 168, 80 )

[node name="FlyingEnemy" type="KinematicBody2D" groups=[
"living",
]]
collision_layer = 4
collision_mask = 0
script = ExtResource( 1 )
__meta__ = {
"_edit_group_": true
}
Bullet = ExtResource( 5 )

[node name="Sprite" type="AnimatedSprite" parent="."]
frames = SubResource( 3 )
frame = 1
playing = true

[node name="Hitbox" type="Area2D" parent="."]
collision_layer = 2
collision_mask = 0

[node name="CollisionShape2D" type="CollisionShape2D" parent="Hitbox"]
position = Vector2( 0, 1 )
shape = SubResource( 4 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( 0, 1 )
shape = SubResource( 4 )

[node name="WanderTimer" type="Timer" parent="."]

[node name="ShootTimer" type="Timer" parent="."]
wait_time = 0.75

[node name="HurtSound" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 3 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/Die = SubResource( 5 )
anims/FlyRight = SubResource( 6 )
anims/Hurt = SubResource( 7 )
anims/Idle = SubResource( 8 )

[node name="DetectionArea" type="Area2D" parent="."]
visible = false
collision_layer = 0
collision_mask = 32
__meta__ = {
"_edit_lock_": true
}

[node name="DetectionShape" type="CollisionShape2D" parent="DetectionArea"]
shape = SubResource( 9 )

[node name="ShootSound" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 6 )
pitch_scale = 1.5
[connection signal="body_entered" from="Hitbox" to="." method="_on_Hitbox_body_entered"]
[connection signal="timeout" from="WanderTimer" to="." method="_on_Timer_timeout"]
[connection signal="timeout" from="ShootTimer" to="." method="_on_ShootTimer_timeout"]
[connection signal="area_entered" from="DetectionArea" to="." method="player_detected"]
[connection signal="area_exited" from="DetectionArea" to="." method="player_lost"]
